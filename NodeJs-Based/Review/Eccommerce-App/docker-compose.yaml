version: '3.8'

services:
  # MongoDB Database
  mongo:
    image: mongo:8.0
    container_name: ecommerce_mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - ecommerce_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: ecommerce_redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ecommerce_network

  # RabbitMQ Message Queue
  rabbitmq:
    image: rabbitmq:3-management
    container_name: ecommerce_rabbitmq
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: password
    ports:
      - "5672:5672"
      - "15672:15672"  # Management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - ecommerce_network

  # Backend API
  backend:
    build: ./backend
    container_name: ecommerce_backend
    restart: always
    env_file:
    - ./backend/.env 
    ports:
      - "5000:5000"
    depends_on:
      - mongo
      - redis
      - rabbitmq
    networks:
      - ecommerce_network

  # Frontend React App
  frontend:
    build: ./frontend
    container_name: ecommerce_frontend
    restart: always
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - ecommerce_network

volumes:
  mongo_data:
  redis_data:
  rabbitmq_data:

networks:
  ecommerce_network:
    driver: bridge
