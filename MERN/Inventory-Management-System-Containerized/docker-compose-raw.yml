version: '3.9'

services:
  mongodb:
    image: mongo:7
    container_name: ims-mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: StrongPassword123!
      MONGO_INITDB_DATABASE: IMS
    volumes:
      - my_mongo_data:/data/db
    networks:
      - ims-network

  mongo-express:
    image: mongo-express
    container_name: ims-mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: StrongPassword123!
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
      ME_CONFIG_BASICAUTH: false
      # ME_CONFIG_SITE_BASEURL: /mongo-express
      # ME_CONFIG_SITE_PORT: 8081
      # ME_CONFIG_SITE_NAME: Inventory Management System
      # ME_CONFIG_SITE_THEME: flatly
    depends_on:
      - mongodb
    networks:
      - ims-network

  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    container_name: ims-backend
    restart: always
    ports:
      - "8000:8000"
    environment:
      PORT: 8000
      MONGO_URI: mongodb://mongodb:27017/IMS
      CORS_ORIGIN: https://your-domain.com
    depends_on:
      - mongodb
    networks:
      - ims-network

  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    container_name: ims-frontend
    restart: always
    environment:
      REACT_APP_API_BASE_URL: https://your-domain.com/api
    depends_on:
      - backend
    networks:
      - ims-network

  nginx:
    image: nginx:alpine
    container_name: ims-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
    depends_on:
      - frontend
      - backend
    networks:
      - ims-network

volumes:
  my_mongo_data:
  certbot-etc:
  certbot-var:

networks:
  ims-network:
    driver: bridge
