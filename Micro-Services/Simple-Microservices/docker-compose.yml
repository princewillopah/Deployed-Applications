version: "3.9"

services:
  # Databases
  mongo-user:
    image: mongo:7
    container_name: mongo-user
    restart: unless-stopped
    ports: ["27017:27017"]
    volumes:
      - mongo_user_data:/data/db

  mysql-order:
    image: mysql:8
    container_name: mysql-order
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: orders
    ports: ["3306:3306"]
    volumes:
      - mysql_order_data:/var/lib/mysql
    command: ["--default-authentication-plugin=mysql_native_password"]

  postgres-product:
    image: postgres:15
    container_name: postgres-product
    restart: unless-stopped
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: products
    ports: ["5432:5432"]
    volumes:
      - pg_product_data:/var/lib/postgresql/data

  redis-review:
    image: redis:7
    container_name: redis-review
    restart: unless-stopped
    ports: ["6379:6379"]

  # Services
  user-service:
    build: ./user-service
    environment:
      PORT: 4001
      MONGO_URI: mongodb://mongo-user:27017/users
    depends_on: [mongo-user]

  product-service:
    build: ./product-service
    environment:
      PORT: 4002
      PG_URI: postgres://user:pass@postgres-product:5432/products
    depends_on: [postgres-product]

  order-service:
    build: ./order-service
    environment:
      PORT: 4003
      MYSQL_URI: mysql://root:root@mysql-order:3306/orders
    depends_on: [mysql-order]

  review-service:
    build: ./review-service
    environment:
      PORT: 4004
      REDIS_URL: redis://redis-review:6379
    depends_on: [redis-review]

  payment-service:
    build: ./payment-service
    environment:
      PORT: 4005
      MONGO_URI: mongodb://mongo-user:27017/payments
    depends_on: [mongo-user]

  inventory-service:
    build: ./inventory-service
    environment:
      PORT: 4006
      PG_URI: postgres://user:pass@postgres-product:5432/inventory
    depends_on: [postgres-product]

  # Frontend (builds to static)
  frontend-build:
    image: node:18
    working_dir: /app
    volumes:
      - ./frontend:/app
      - frontend_dist:/dist
    command: sh -c "npm ci && npm run build && cp -r dist/* /dist"
    # Only runs to produce /dist; not exposed

  # Nginx: serves frontend and proxies /api/*
  nginx:
    image: nginx:alpine
    depends_on:
      - frontend-build
      - user-service
      - product-service
      - order-service
      - review-service
      - payment-service
      - inventory-service
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - frontend_dist:/usr/share/nginx/html:ro
    ports:
      - "80:80"
    restart: unless-stopped

volumes:
  mongo_user_data:
  mysql_order_data:
  pg_product_data:
  frontend_dist:
