services:
  # API Gateway
  api-gateway:
    build: ./frontend
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/proxy_params:/etc/nginx/proxy_params   # ‚Üê Must be here
    depends_on:
      - user-service
      - product-service
      - order-service
      - review-service

  # User Service (PostgreSQL)
  user-service:
    build: ./services/user-service
    env_file:
      - .env
    # environment:
    #   - DB_HOST=postgres
    #   - DB_USER=user
    #   - DB_PASS=pass
    #   - DB_NAME=usersdb
    depends_on:
      - postgres

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=pass
      - POSTGRES_DB=usersdb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432"

  # Product Service (MongoDB)
  product-service:
    build: ./services/product-service
    env_file:
      - .env
    # environment:
    #   - MONGODB_URI=mongodb://mongo:27017
    depends_on:
      - mongo

  mongo:
    image: mongo:7
    environment:
      - MONGO_INITDB_DATABASE=productsdb
    volumes:
      - mongo_data:/data/db
    ports:
      - "27017"

  # Order Service (MySQL)
  order-service:
    build: ./services/order-service
    env_file:
      - .env
    # environment:
    #   - MYSQL_HOST=mysql
    #   - MYSQL_USER=root
    #   - MYSQL_PASS=rootpass
    #   - MYSQL_DB=ordersdb
    depends_on:
      - mysql

  mysql:
    image: mysql:8
    environment:
      - MYSQL_ROOT_PASSWORD=rootpass
      - MYSQL_DATABASE=ordersdb
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306"

  # Review Service (Redis)
  review-service:
    build: ./services/review-service
    env_file:
      - .env
    # environment:
    #   - REDIS_URL=redis://redis:6379
    depends_on:
      - redis

  redis:
    image: redis:7-alpine
    ports:
      - "6379"

volumes:
  postgres_data:
  mongo_data:
  mysql_data: