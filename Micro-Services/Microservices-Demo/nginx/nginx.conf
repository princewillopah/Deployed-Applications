# nginx/nginx.conf - Fixed for 500 errors

events {
    worker_connections 1024;
}

http {
    log_format json escape=json '{ "timestamp": "$time_iso8601", '
        '"remote_addr": "$remote_addr", '
        '"method": "$request_method", '
        '"scheme": "$scheme", '
        '"host": "$server_name", '
        '"uri": "$request_uri", '
        '"status": "$status", '
        '"bytes_sent": "$body_bytes_sent", '
        '"http_referrer": "$http_referer", '
        '"http_user_agent": "$http_user_agent" }';

    access_log /var/log/nginx/access.log json;
    error_log /var/log/nginx/error.log debug;  # Changed to debug for better logs

    upstream user_service {
        server user-service:4001;
    }

    upstream product_service {
        server product-service:4002;
    }

    upstream order_service {
        server order-service:4003;
    }

    upstream review_service {
        server review-service:4004;
    }

    server {
        listen 80;
        root /usr/share/nginx/html;
        index index.html;

        # Serve React App
        location / {
            try_files $uri $uri/ /index.html;
        }
        
        location /health {
            access_log off;
            return 200 'OK\n';
            add_header Content-Type text/plain;
        }

        # âœ… Fixed routing: rewrite to internal path, proxy to service root
        location /api/users {
            rewrite ^/api/users(.*)$ /user$1 break;
            proxy_pass http://user_service;
            include proxy_params;
        }

        location /api/products {
            rewrite ^/api/products(.*)$ /product$1 break;
            proxy_pass http://product_service;
            include proxy_params;
        }

        location /api/orders {
            rewrite ^/api/orders(.*)$ /order$1 break;
            proxy_pass http://order_service;
            include proxy_params;
        }

        location /api/reviews {
            rewrite ^/api/reviews(.*)$ /review$1 break;
            proxy_pass http://review_service;
            include proxy_params;
        }

        location /api/ {
            return 404 '{"error": "Not Found"}';
            add_header Content-Type application/json;
        }
    }
}